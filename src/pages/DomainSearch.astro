---
import { Icon } from 'astro-icon/components'

const checkDomainAvailability = async (domain: string) => {
  try {
    const response = await fetch(`https://www.whoisxmlapi.com/whoisserver/WhoisService?apiKey=at_vIjvCmdmpCGI6GUjRWg9Z6ZRwhMnq&domainName=${domain}&outputFormat=JSON`);
    const data = await response.json();
    
    if (data.WhoisRecord && data.WhoisRecord.registrarName) {
      return false; // Domain is taken
    } else {
      return true; // Domain is available
    }
  } catch (error) {
    console.error('Error checking domain availability:', error);
    return null; // Error occurred
  }
}
---

<section class="relative py-16 sm:py-20 lg:py-24 bg-blue-50 dark:bg-slate-800">
  <div class="max-w-6xl mx-auto px-4 sm:px-6">
    <div class="mb-12 text-center">
      <h2 class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading">
        Secure Your Digital Identity
      </h2>
      <p class="max-w-3xl mx-auto text-center text-xl text-gray-600 dark:text-slate-400">
        Your domain is your online home. Let's find the perfect address for your web presence.
      </p>
    </div>
    <div class="max-w-3xl mx-auto mb-12">
      <form id="domainForm" class="relative flex">
        <input
          id="domainInput"
          type="text"
          placeholder="Enter your dream domain name"
          class="w-full px-6 py-4 rounded-l-full border-2 border-r-0 border-green-500 focus:border-green-500 focus:ring-2 focus:ring-green-500 dark:bg-slate-700 dark:border-green-400 dark:text-white text-lg outline-none"
        />
        <button
          type="submit"
          class="px-8 py-4 rounded-r-full bg-green-500 text-white font-bold text-lg hover:bg-green-600 transition duration-300 flex items-center justify-center min-w-[140px] border-2 border-green-500 hover:border-green-600"
        >
          <Icon name="tabler:search" class="w-6 h-6 mr-2" />
          Discover
        </button>
      </form>
      <div id="resultMessage" class="mt-4 text-center text-lg font-semibold"></div>
      <div id="registrationLinks" class="mt-4 flex justify-center space-x-4 hidden"></div>
    </div>
    <!-- Rest of the component remains unchanged -->
  </div>
</section>

<script>
  const domainForm = document.querySelector('#domainForm') as HTMLFormElement;
  const domainInput = document.querySelector('#domainInput') as HTMLInputElement;
  const resultMessage = document.querySelector('#resultMessage') as HTMLDivElement;
  const registrationLinks = document.querySelector('#registrationLinks') as HTMLDivElement;

  domainForm.addEventListener('submit', async (e: Event) => {
    e.preventDefault();
    const domain = domainInput.value.trim();
    
    if (domain) {
      resultMessage.textContent = 'Checking domain availability...';
      resultMessage.className = 'mt-4 text-center text-lg font-semibold text-blue-500';
      registrationLinks.classList.add('hidden');

      const isAvailable = await checkDomainAvailability(domain);

      if (isAvailable === true) {
        resultMessage.textContent = `Great news! ${domain} is available!`;
        resultMessage.className = 'mt-4 text-center text-lg font-semibold text-green-500';
        showRegistrationLinks(domain);
      } else if (isAvailable === false) {
        resultMessage.textContent = `Sorry, ${domain} is already taken.`;
        resultMessage.className = 'mt-4 text-center text-lg font-semibold text-red-500';
      } else {
        resultMessage.textContent = 'An error occurred while checking domain availability.';
        resultMessage.className = 'mt-4 text-center text-lg font-semibold text-yellow-500';
      }
    }
  });

  function showRegistrationLinks(domain: string) {
    registrationLinks.innerHTML = `
      <a href="https://www.godaddy.com/en-ph?searchText=${domain}" target="_blank" rel="noopener noreferrer" class="flex items-center bg-white dark:bg-slate-900 px-4 py-2 rounded-full shadow-md hover:shadow-lg transition duration-300">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M4.083 9h1.946c.089-1.546.383-2.97.837-4.118A6.004 6.004 0 004.083 9zM10 2a8 8 0 100 16 8 8 0 000-16zm0 2c-.076 0-.232.032-.465.262-.238.234-.497.623-.737 1.182-.389.907-.673 2.142-.766 3.556h3.936c-.093-1.414-.377-2.649-.766-3.556-.24-.56-.5-.948-.737-1.182C10.232 4.032 10.076 4 10 4zm3.971 5c-.089-1.546-.383-2.97-.837-4.118A6.004 6.004 0 0115.917 9h-1.946zm-2.003 2H8.032c.093 1.414.377 2.649.766 3.556.24.56.5.948.737 1.182.233.23.389.262.465.262.076 0 .232-.032.465-.262.238-.234.498-.623.737-1.182.389-.907.673-2.142.766-3.556zm1.166 4.118c.454-1.147.748-2.572.837-4.118h1.946a6.004 6.004 0 01-2.783 4.118zm-6.268 0C6.412 13.97 6.118 12.546 6.03 11H4.083a6.004 6.004 0 002.783 4.118z" clip-rule="evenodd" />
        </svg>
        GoDaddy
      </a>
    `;
    registrationLinks.classList.remove('hidden');
  }

  async function checkDomainAvailability(domain: string): Promise<boolean | null> {
    try {
      const response = await fetch(`https://www.whoisxmlapi.com/whoisserver/WhoisService?apiKey=at_vIjvCmdmpCGI6GUjRWg9Z6ZRwhMnq&domainName=${domain}&outputFormat=JSON`);
      const data = await response.json();
      
      if (data.WhoisRecord && data.WhoisRecord.registrarName) {
        return false; // Domain is taken
      } else {
        return true; // Domain is available
      }
    } catch (error) {
      console.error('Error checking domain availability:', error);
      return null; // Error occurred
    }
  }
</script>